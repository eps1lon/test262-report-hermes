diff --git a/lib/agents/hermes.js b/lib/agents/hermes.js
index a30e9836f0999d25a44d1bee54b8b164bc67318a..7190f39be6354b4f0f603aca78192a8512eafc13 100644
--- a/lib/agents/hermes.js
+++ b/lib/agents/hermes.js
@@ -23,16 +23,19 @@ function parseSyntaxError(syntaxErrorMessage) {
 class HermesAgent extends ConsoleAgent {
   constructor(options) {
     super(options);
+    this.defaultArgs = this.args
   }
 
   async evalScript(code, options = {}) {
+    const args = [...this.defaultArgs]
+
     // By default eshost must target an environment that can
     // evaluate non-strict mode code
     if (!options.module) {
-      this.args.unshift('-non-strict');
+      args.unshift('-non-strict');
     }
 
-    this.args.unshift('-Xintl', '-enable-eval', '-fenable-tdz');
+    args.unshift('-Xintl', '-enable-eval', '-fenable-tdz');
 
     // There is currently no flag for supporting modules in Hermes
     // if (options.module && this.args[0] !== '-m') {
@@ -43,6 +46,10 @@ class HermesAgent extends ConsoleAgent {
     //   this.args.shift();
     // }
 
+    // we just want the args for this run but this isn't something Agent is built for
+    // So we need to make sure we start from the initial args every time we call `evalScript`
+    this.args = args
+
     return super.evalScript(code, options);
   }
 
